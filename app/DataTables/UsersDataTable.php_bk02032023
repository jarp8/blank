<?php

namespace App\DataTables;

use App\Models\User;
use Yajra\DataTables\Html\Button;
use Yajra\DataTables\Html\Column;
use Illuminate\Support\Facades\Gate;
use Yajra\DataTables\EloquentDataTable;
use Yajra\DataTables\Html\Editor\Editor;
use Yajra\DataTables\Html\Editor\Fields;
use Yajra\DataTables\Services\DataTable;
use Yajra\DataTables\Html\Builder as HtmlBuilder;
use Illuminate\Database\Eloquent\Builder as QueryBuilder;

class UsersDataTable extends DataTable
{
    /**
     * Build DataTable class.
     *
     * @param QueryBuilder $query Results from query() method.
     * @return \Yajra\DataTables\EloquentDataTable
     */
    public function dataTable(QueryBuilder $query): EloquentDataTable
    {
        return (new EloquentDataTable($query))
            ->addColumn('action', function ($row) {
                return $this->getActions($row);
            })
            // ->addColumn('checkbox', function ($id){
            //     return '<input type="checkbox" class="row-checkbox" value="'.$id.'">';
            // })
            ->rawColumns(['action', 'checkbox'])
            ->setRowId('id');
    }

    /**
     * Get query source of dataTable.
     *
     * @param \App\Models\User $model
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function query(User $model): QueryBuilder
    {
        return $model->with('role');
    }

    /**
     * Optional method if you want to use html builder.
     *
     * @return \Yajra\DataTables\Html\Builder
     */
    public function html(): HtmlBuilder
    {
        return $this->builder()
                    ->setTableId('users-table')
                    ->columns($this->getColumns())
                    ->orderBy(0, 'asc')
                    ->processing(true)
                    ->serverSide(true)
                    ->stateSave(true)
                    ->stateSaveParams('function(settings, data){ delete data.search; }')
                    ->minifiedAjax()
                    ->dom('Bfrltip')
                    ->orderBy(1)
                    ->selectStyleSingle()
        			->responsive(true)
                    ->initComplete('function(){
                        deleteDataTableItem();
                    }')
                    ->buttons([
                        Button::make('excel'),
                        Button::make('colvis'),
                        // Button::make('csv'),
                        // Button::make('pdf'),
                        // Button::make('print'),
                        // Button::make('reset'),
                        // Button::make('reload')
                    ]);
    }

    /**
     * Get the dataTable columns definition.
     *
     * @return array
     */
    public function getColumns(): array
    {
        return [
            Column::make('id'),
            Column::make('name'),
            Column::make('email'),
            Column::make('role.name'),
            Column::make('created_at')->visible(false),
            Column::make('updated_at')->visible(false),
            Column::computed('action')
            ->exportable(false)
            ->printable(false)
            ->width(60)
            ->addClass('text-center'),
            // Column::computed('checkbox')
            // ->title('<input type="checkbox" id="select-all">')
            // ->addClass('text-center')
            // ->width(20)
            // ->searchable(false)
            // ->orderable(false)
            // ->exportable(false)
            // ->printable(false)
        ];
    }

    /**
     * Get filename for export.
     *
     * @return string
     */
    protected function filename(): string
    {
        return 'Users_' . date('YmdHis');
    }

    public function getActions($row)
    {
        $buttons = [];

        if(Gate::allows('users-edit')) {
            $buttons[] = ['route' => route('users.edit', $row->id), 'icon' => '<i class="far fa-edit"></i>'];
        }

        if(Gate::allows('users-destroy')) {
            $buttons[] = ['route' => route('users.destroy', $row->id), 'icon' => '<i class="far fa-trash-alt"></i>', 'modal' => 'deleteModal'];
        }

        $actions = view('datatables.action', compact('buttons'))->render();

        return $actions;
    }
}
